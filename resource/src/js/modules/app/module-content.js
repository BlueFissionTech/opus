import "../datatables";
import { Model, Reactor, ReactiveTemplate } from "../scripts/reactive_template.js";
import Template from "../scripts/template.js";
import PresentationModal from "../scripts/presentation-modal.js"

//== Class definition
var ModuleContent = function() {
	var dataTable;
	const inputOptions = {
	  rejectOn: isNaN,
	  mutator: Number
	};

	const model = new Model;
	model.content_id = new Reactor(0);
	model.title = new Reactor("");
	model.slug = new Reactor("");
	model.uri = new Reactor("");
	model.keywords = new Reactor("");
	model.description = new Reactor("");
	model.is_published = new Reactor(0);
	model.is_autogenerated = new Reactor(0);
	model.body = new Reactor("");
	model.template = new Reactor("");

	const settings = new Model;
	settings.settings_id = new Reactor(0);
	settings.content_id = new Reactor(0);
	settings.value = new Reactor("");

	app.assign('content_title', model.title);
	app.set('.content-id-field', model.content_id, 'value', inputOptions);
	app.set('.content-title-field', model.title, 'value');
	app.set('.content-slug-field', model.slug, 'value');
	app.set('.content-uri-field', model.uri, 'value');
	app.set('.content-keywords-field', model.keywords, 'value');
	app.set('.content-description-field', model.description, 'value');
	app.set('.content-is-published-field', model.is_published, 'value', inputOptions);
	app.set('.content-is-autogenerated-field', model.is_autogenerated, 'value', inputOptions);
	app.set('.content-body-field', model.body, 'value');
	app.set('.content-template-field', model.template, 'value');

	// app.set('.settings-id', settings.settings_id, 'value', inputOptions);
	// app.set('.settings-content-id-field', settings.content_id, 'value', inputOptions);
	// app.set('.settings-value-field', settings.name, 'value');
	
	var ready = function() {
		$('#content-edit-screen').hide();
		feather.replace();
	};
	
	var showEditScreen = function() {
		$('#content-listing-screen').fadeOut(200, function(e) {
			$('#content-edit-screen').fadeIn(200);
		});
	};
	
	var showListingScreen = function() {
		$('#content-edit-screen').fadeOut(200, function(e) {
			$('#content-listing-screen').fadeIn(200);
		});
	};

	var screenHome = function() {
		$('.home-btn').click(function(e) {
			showListingScreen();
		});
	};

	var loadContentList = function() {
		dataTable = $('#dataTable').DataTable({
			ajax: {
				url: '/api/admin/content',
				dataSrc: 'list'
			},
			aoColumnDefs: [
        { "bSortable": false, "aTargets": [ 3 ] }, 
        { "bSearchable": false, "aTargets": [ 2, 3 ] }
	    ],
			columns: [
				{
        	data: 'title',
					render: function(data, type, row) {
					  return `<a href="#" class="show-btn">${data}</a>`;
					},
				},
        { data: 'description' },
        { 
        	data: 'is_published',
        	render: function ( data, type, row ) {
				    return data == 1 ? `<span class="badge rounded-pill bg-success">Published</span>` : `<span class="badge rounded-pill bg-secondary">Unpublished</span>`;
			  	}
        },
        {
				  data: null,
				  render: function ( data, type, row ) {
				    return '<button class="btn btn-sm btn-warning edit-btn"><i class="fa fa-pencil"></i></button> ' 
				    +'&nbsp;<button class="btn btn-sm btn-secondary settings-btn"><i class="fa fa-gear"></i></button>';
			  	}
				}
	   	]
		});
	};

	var contentShow = function() {
		$("#dataTable").on("click", ".show-btn", function(e) {
			e.preventDefault();
			// Get the row data (tr element) containing the clicked cell
			var data = dataTable.row( $(this).parents('tr') ).data();
		
			app.api.content.read(data.content_id, function(response) {
				model.update(response.data);
				showEditScreen();
				// const template = new Template('#content-detail-display-item', user);
				// template.render();
				// template.swap('#content-details');
	    });
		});
	};

	var contentNew = function() {
		$('#content-add-btn').on('click', function(e) {
			e.preventDefault();
			model.clear();
			showEditScreen();
    });
	};

	var contentDelete = function() {
		$('#content-delete-btn').click(function() {
			app.api.content.delete(model, function(response) {
				app.ui.notice("Content has been deleted");
        dataTable.ajax.reload();
			});
		});
	};
	
	var contentEdit = function() {
		$('#dataTable').on('click', '.edit-btn', function(e) {
			e.preventDefault();
			let data = dataTable.row( $(this).parents('tr') ).data();
			let content_id = data.content_id;
			app.api.content.read(content_id, function(response) {
				model.update(response.data);
				$('#modalNewContent').modal('show');
			});
    });
	};

	var contentSave = function() {
		$('.save-btn').click(function(e) {
			e.preventDefault();
			app.api.content.save(model, function(response) {
				if (!response.id) {
					app.ui.notice(response.status, 'error');
					return;
				}
				model.clear();
        dataTable.ajax.reload();
        $('#modalNewContent').modal('hide');
				app.ui.notice("Content has been saved");
			});
		});

		$('#content-save-btn').click(function(e) {
			e.preventDefault();
			app.api.content.save(model, function(response) {
				if (!response.id) {
					app.ui.notice(response.status, 'error');
					return;
				}
				model.clear();
        dataTable.ajax.reload();
        showListingScreen();
				app.ui.notice("Content has been saved");
			});
		});
	};

	var contentManage = function() {
		$('#dataTable').on('click', '.settings-btn', function(e) {
			e.preventDefault();
			let data = dataTable.row( $(this).parents('tr') ).data();
			let content_id = data.content_id;
			app.api.content_settings.read(content_id, function(response) {
				$('#modalContentSettings').modal('show');
			});
    });
	};

	var contentConfigure = function() {
		$('#content-settings-save-btn').click(function() {
			app.api.content_settings.save(settings, function(response) {
        $('#modalNewContent').modal('hide');
				app.ui.notice("Content settings have been saved");
			});
		});
	};

	return {
        //main function to initiate the module
        init: function () {
        	
        	screenHome();
        	loadContentList();
        	contentShow();
        	contentNew();
        	contentEdit();
        	contentManage();
        	contentConfigure();
        	contentSave();

        	ready();
        }
    };
}();

jQuery(document).ready(function() {
    ModuleContent.init();
});

export default ModuleContent;